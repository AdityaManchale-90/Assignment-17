"""
1. Assign the value 7 to the variable guess_me. Then, write the conditional 
tests (if, else, and elif) to print the string 'too low' if guess_me is less 
than 7, 'too high' if greater than 7, and 'just right' if equal to 7.
"""

guess_me = 7
test_num = int(input("Enter an integer = "))
if test_num < guess_me:
  print("too low")
elif test_num == guess_me:
  print("just right")
else:
  print("too high")

"""
2. Assign the value 7 to the variable guess_me and the value 1 to the 
variable start. Write a while loop that compares start with guess_me. Print 
too low if start is less than guess me. If start equals guess_me, print 
'found it!' and exit the loop. If start is greater than guess_me, print 
'oops' and exit the loop. Increment start at the end of the loop.
"""

guess_me = 7
start = 1
while True:
  if start < guess_me:
    print("Guessed number is ", start)
    print("too low")
  elif start == 7:
    print("Guessed number is ", start)
    print("found it")
  else:
    print("oops, Guessed number is more than 7")
    break
  start += 1

# 3. Print the following values of the list [3, 2, 1, 0] using a for loop.
l = [3, 2, 1, 0]
for i in l:
  print(i)

# 4. Use a list comprehension to make a list of the even numbers in range(10)
even_num = []
for i in range(0,10):
  if i%2 == 0:
    even_num.append(i)
print(even_num)

"""
5. Use a dictionary comprehension to create the dictionary squares. 
Use range(10) to return the keys, and use the square of each key as its value.
"""
square_dict = {}
for i in range(0,10):
  square_dict.update({i:i*i})
print(square_dict)
print(square_dict.keys())

# 6. Construct the set odd from the odd numbers in the range using a set comprehension (10).
odd_set = set()
for i in range(0,10):
  if i%2 != 0:
    odd_set.add(i)
print(odd_set)

"""
7. Use a generator comprehension to return the string 'Got ' and a number 
for the numbers in range(10). Iterate through this by using a for loop.
"""

for i in range(10):
  gen_compr = ("Got " + str(i))
  for num in gen_compr:
    print(num)
    
# 8. Define a function called good that returns the list ['Harry', 'Ron', 'Hermione'].

def good():
  names = ["Harry", "Ron", "Hermione"]
  return names

good()

"""
9. Define a generator function called get_odds that returns the odd numbers 
 from range(10). Use a for loop to find and print the third value returned.
"""

def get_odds():
  odd_nums = []
  for i in range(10):
    if i%2 != 0:
      odd_nums.append(i)
  print(odd_nums)

get_odds()

"""
10. Define an exception called OopsException. Raise this exception to see 
what happens. Then write the code to catch this exception and print 
'Caught an oops'.
"""

def oops_exception(a):
  if a < 0:
    raise OopsException(a)

try:
  with_exception(-1)
except OopsException as err:
  print('Caught an oops')
  
"""
11. Use zip() to make a dictionary called movies that pairs these lists: 
titles = ['Creature of Habit', 'Crewel Fate'] and plots = ['A nun turns into 
a monster', 'A haunted yarn shop'].
"""

titles = ["Creature of Habit", "Crewel Fate"]
plots = ["A nun turns into a monster", "A haunted yarn shop"]

movies = {}
for title, plot in zip(titles, plots):
    movies[title] = plot
print(movies)
